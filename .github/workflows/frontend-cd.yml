name: Frontend CD Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm install

      - name: Run Linting
        run: |
          cd starter/frontend
          npm run lint

  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm install

      - name: Execute Tests
        run: |
          cd starter/frontend
          npm run test

  docker-deploy:
    runs-on: ubuntu-latest
    needs: [lint-code, run-tests]

    env:
      REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: |
          cd starter/frontend
          npm install

      - name: Initialize Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build Docker Image
        run: |
          cd starter/frontend
          docker build --build-arg REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_FRONTEND }}:${GITHUB_SHA} .

      - name: Authenticate to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker Image to Amazon ECR
        run: |
          cd starter/frontend
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_FRONTEND }}:${GITHUB_SHA}

      - name: Update Kubernetes Configuration
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ secrets.AWS_REGION }}

      - name: Deploy to Kubernetes
        run: |
          cd ./starter/frontend/k8s &&
          kustomize edit set image frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_FRONTEND }}:${GITHUB_SHA} &&
          kustomize build | kubectl apply -f -
