name: Backend CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  code-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies for Linting
        run: |
          cd starter/backend
          pip install pipenv flake8
          pipenv install --dev

      - name: Run Code Linter
        run: |
          cd starter/backend
          pipenv run lint

  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies for Testing
        run: |
          cd starter/backend
          pip install pipenv flake8
          pipenv install --dev

      - name: Execute Tests
        run: |
          cd starter/backend
          pipenv run test

  app-deploy:
    runs-on: ubuntu-latest
    needs: [code-lint, run-tests]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies for Deployment
        run: |
          cd starter/backend
          pip install pipenv flake8
          pipenv install --dev

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build Docker Image
        run: |
          cd starter/backend
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_BACKEND }}:${GITHUB_SHA} .

      - name: Authenticate to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker Image to Amazon ECR
        run: |
          cd starter/backend
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_BACKEND }}:${GITHUB_SHA}

      - name: Update Kubernetes Configuration
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ secrets.AWS_REGION }}

      - name: Deploy to Kubernetes Cluster
        run: |
          cd ./starter/backend/k8s &&
          kustomize edit set image backend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_BACKEND }}:${GITHUB_SHA} &&
          kustomize build | kubectl apply -f -
